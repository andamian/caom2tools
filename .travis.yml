language: python


python:
    - 2.7
    - 3.3
    - 3.4
    - 3.5
    - 3.6

# Setting sudo to false opts in to Travis-CI container-based builds.
sudo: false

# The apt packages below are needed for sphinx builds. A full list of packages
# that can be included can be found here:
#
# https://github.com/travis-ci/apt-package-whitelist/blob/master/ubuntu-precise

#addons:
    #apt:
        #packages:
#            - graphviz
#            - texlive-latex-extra
#            - dvipng

env:
    matrix:
        - SETUP_CMD='test'

matrix:
    include:

        # Check for sphinx doc build warnings - we do this first because it
        # may run for a long time
        #- python: 2.7
#!/usr/bin/env bash
# Deploys a Python library or application

product=$(echo $TRAVIS_TAG | awk -F '=' '{print $1}')
version=$(echo $TRAVIS_TAG | awk -F '=' '{print $2}')
if [ -z "$product" ]; then
    echo "Could not find name of product in TRAVIS_TAG: $TRAVIS_TAG";
    exit -1
fi
if [ -z "$version" ]; then
    echo "Could not find version of product in TRAVIS_TAG: $TRAVIS_TAG"; 
    exit -1
fi

echo "Deploying $product, version $version..."
cd $product || { echo "Project $product does not exist in this repo"; exit -1; }
# check that the version in the tag and in setup.cfg match
sed 's/ //g' setup.cfg | grep "^version=$version" || { \
   echo "Version in tag ($version) does not match version in setup.cfg \
($(sed 's/ //g' setup.cfg | grep '^version=' | awk -F '=' '{print $2}'))"; \
   exit -1; }

# build
python setup.py clean sdist || { echo "Errors building $product"; exit -1; }
# upload to pypi
# generate the .pypirc file first
echo "[pypi]" > .pypirc
chmod 600 .pypirc
echo "username = Canadian.Astronomy.Data.Centre" >> .pypirc
echo "password = ${PYPI_PASSWORD}" >> .pypirc
echo "Configured .pypirc: "

echo "Publish on pypi"
twine upload --config-file .pypirc dist/* || { echo "Errors publishing $TRAVIS_TAG"; exit -1; }

# check version available
pip install --upgrade --pre $product==$version || { echo "$TRAVIS_TAG not installed on pypi" ; exit -1 } 
        #  env: SETUP_CMD='build_sphinx -w'

    exclude:

        #- python: 3.3
        #  env: SETUP_CMD='test'
          
install:
    - pip install -U pip
    - pip install twine
    - for i in $(ls -d */); do cd $i; pip install -r dev_requirements.txt; cd ..; done
    - pip install coveralls

script:
    - for i in $(ls -d */); do cd $i; pytest --cov $i || exit 1; cd ..; done

after_success:
    # If coveralls.io is set up for this package, uncomment the line
    # below and replace "packagename" with the name of your package.
    # The coveragerc file may be customized as needed for your package.
    # Run coverage for all Python versions but submit only once - 3.5
    - if [[ $TRAVIS_PYTHON_VERSION == '3.5' ]]; then coverage combine $(ls -d */.coverage) || exit 1; coveralls; fi

jobs:
  include:
    - stage: publish
      python: 3.4
      deploy:
         provider: script
         script: ./.publish.sh
         on:
            tags: true
            condition: " -z ${PYPI_PASSWORD+x} "
            branch: hotfix
